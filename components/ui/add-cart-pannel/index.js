import React, { useEffect, useState } from "react";
import { cartListState, totalCartValueState } from "../../../recoil/atoms/cart";

import CommonService from "../../../services/commonService";
import Head from "next/head";
import Image from "next/image";
import KuposModal from "../kupos-modal/kupos-modal";
import MyButton from "../my-button";
import MyInput from "../my-input";
import baseUrls from "../../../services/constants/baseUrls";
import classes from "./add-cart-pannel.module.less";
import { useRecoilState } from "recoil";

const ButtonCounter = ({ title, onClick }) => {
  return (
    <div onClick={onClick} className={classes.button}>
      {title}
    </div>
  );
};

const AddToCartPannel = ({ currentProduct }) => {
  const [addressModal, setAddressModal] = useState(false);
  const [cartList, setCartList] = useRecoilState(cartListState);
  const [isPresentInCart, setIsPresentInCart] = useState(null);
  const [bulkQty, setBulkQty] = useState("");
  const item = currentProduct;
  const downloadPdf = () => {
    window.open(baseUrls.mediaUrl + "product/" + item.document, "_blank");
  };

  useEffect(() => {
    let cartItems = CommonService.copyObject(cartList);

    cartItems?.map((cartItem) => {
      if (cartItem.id === currentProduct?.id) {
        setIsPresentInCart(cartItem);
      }
    });

    // console.log({ cartItems });
  }, [cartList]);
  const bulkQuantity = (qty) => {
    setBulkQty(qty);
  };

  const updateCartItem = (product, increase) => {
    let newItemsArr = [...cartList];
    let qty = increase
      ? isPresentInCart?.quantity + 1
      : isPresentInCart?.quantity - 1;

    let tempProduct = {
      ...product,
      ["quantity"]: qty,
    };

    //to find where current item is present
    let productIndex = null;
    newItemsArr.map((item, i) => {
      if (item.id === isPresentInCart?.id) {
        productIndex = i;
      }
    });

    newItemsArr.splice(productIndex, 1, tempProduct);
    setCartList(newItemsArr);
  };

  const addItemToCart = (product) => {
    let newItemsArr = [...cartList];
    let tempProduct = {};

    if (isPresentInCart) {
      updateCartItem(product, true);
    } else {
      tempProduct = { ...product, ["quantity"]: 1 };
      newItemsArr.push(tempProduct);
      setCartList(newItemsArr);
    }
  };

  return (
    <>
      <Head>
        <title>E-Commerce</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
          integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
          crossOrigin="anonymous"
        />
      </Head>
      <div className={classes.pannel_wrapper}>
        <div className={classes.new_tag}>New</div>
        <div className={classes.title_desc}>
          <div className={classes.title + " font20"}>
            <span>{item?.name}</span>
          </div>
          <div className={classes.desc + " font10 general-text "}>
            <span>{item?.description}</span>
          </div>
        </div>
        <div className={classes.item_price_outer}>
          <span className="font10">Price(USD): </span>
          <span className="font20">{item?.price}</span>
        </div>

        <div className={classes.in_stock}>
          <div className={classes.stock_inner}>
            <span className={classes.stock_no + " font10"}>11</span>{" "}
            <span className="font10">pcs in stock</span>
          </div>
          <div className={classes.delivery}>
            <span className="font10 blue-text">Check deliveries</span>
          </div>
        </div>

        <div className={classes.see_details}>
          <span className={classes.detail + " font10 blue-text"}>
            See price details
          </span>
        </div>

        <div className={classes.multi_selection}>
          <div className={classes.title}>
            <span className="font10 bold-text">No. of pieces </span>
            <span className="font10">(Multiplicity: 1)</span>
          </div>
          <div className={classes.count_container}>
            <div className={classes.changables}>
              <ButtonCounter
                title="-"
                onClick={() => updateCartItem(currentProduct, false)}
              />
              <MyInput
                wrapperStyle={{ borderRadius: "0px" }}
                value={isPresentInCart?.quantity || 1}
                style={{ textAlign: "center" }}
              />
              <ButtonCounter
                title="+"
                onClick={() => updateCartItem(currentProduct, true)}
              />
            </div>
            <div className={classes.total_price}>
              <span className="font10">
                Total Price(USD):{" "}
                <span className="font20">
                  {currentProduct?.price * (isPresentInCart?.quantity || 1)}
                </span>
              </span>
            </div>
          </div>

          <div className={classes.price_details}>
            <div className={classes.ask_quantity}>
              <span
                className="font10 blue-text"
                onClick={() => setAddressModal(true)}
              >
                Ask for price for larger quantity
              </span>
            </div>
          </div>
        </div>

        <div
          className={classes.documentation}
          onClick={downloadPdf}
          target="_blank"
        >
          <Image src={"/images/icons/pdf2.png"} width={20} height={20} alt="" />
          <span className="font10 blue-text">Documentation EN</span>
        </div>
        <div className={classes.add_to_bag}>
          <MyButton
            onClick={() => addItemToCart(item)}
            label={isPresentInCart ? "Already in cart" : " Add to cart"}
            style={{ borderRadius: "20px" }}
          />
        </div>
      </div>
      <KuposModal
        ariaLabel="quantityModal"
        size={"xl"}
        onHide={() => setAddressModal(false)}
        showModal={addressModal}
      >
        <div className={classes.address_form}>
          <div className={classes.title + " font12 text-center bold-text"}>
            Enter quantity
          </div>
          <MyInput
            border={true}
            // label="Quantity"
            onChange={(val) => bulkQuantity(val.target.value)}
            value={bulkQty}
            type="text"
          />

          <MyButton
            label="Submit"
            onClick={() => setAddressModal(false)}
            style={{
              borderRadius: "8px",
              marginTop: "30px",
            }}
          />
        </div>
      </KuposModal>
    </>
  );
};

export default AddToCartPannel;
